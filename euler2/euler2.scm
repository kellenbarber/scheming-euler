;; euler2.scm
;; Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

;; By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

(define (fib a)
  (cond 
    ((= a 1) 1)
    ((= a 2) 2)
    (else (+ (fib (- a 1)) (fib (- a 2))))
  )
)

(define (is-even a)
  (= (modulo a 2) 0)
)

(define (add-if-even a sum)
  (if (is-even a) (+ a sum) sum)
)

(define (add-and-increment a sum i)
  (define this-fib (fib i))
  (set! sum (add-if-even this-fib sum))
  (cond
    ((< this-fib a) (add-and-increment a sum (+ i 1)))
    (else sum)
  )
)

(define euler2 (add-and-increment 4000000 0 1))
